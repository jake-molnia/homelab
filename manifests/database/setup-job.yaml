# manifests/database/setup-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: postgresql-setup
  namespace: database
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: postgres-setup
          image: postgres:15
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: postgres-admin-password

            - name: NEXTCLOUD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: nextcloud-password
            - name: GITEA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: gitea-password
            - name: IMMICH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: immich-password
            - name: KASM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: kasm-password
            - name: VAULTWARDEN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: vaultwarden-password
            - name: JENKINS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: jenkins-password
            - name: AUTHENTIK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-passwords
                  key: authentik-password
          command:
            - /bin/bash
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until pg_isready -h shared-postgresql.database.svc.cluster.local -p 5432 -U postgres; do
                sleep 5
              done

              echo "Creating databases and users..."
              psql -h shared-postgresql.database.svc.cluster.local -U postgres -d postgres -v ON_ERROR_STOP=1 <<EOF

              -- Create databases if they don't exist
              SELECT 'CREATE DATABASE nextcloud' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'nextcloud')\gexec
              SELECT 'CREATE DATABASE gitea' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'gitea')\gexec
              SELECT 'CREATE DATABASE immich' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'immich')\gexec
              SELECT 'CREATE DATABASE kasm' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'kasm')\gexec
              SELECT 'CREATE DATABASE vaultwarden' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'vaultwarden')\gexec
              SELECT 'CREATE DATABASE jenkins' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'jenkins')\gexec
              SELECT 'CREATE DATABASE authentik' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'authentik')\gexec

              -- Create users if they don't exist
              DO \$\$
              BEGIN
                IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'nextcloud') THEN
                  CREATE USER nextcloud WITH PASSWORD '\$NEXTCLOUD_PASSWORD';
                END IF;
                IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'gitea') THEN
                  CREATE USER gitea WITH PASSWORD '\$GITEA_PASSWORD';
                END IF;
                IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'immich') THEN
                  CREATE USER immich WITH PASSWORD '\$IMMICH_PASSWORD';
                END IF;
                IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'kasm') THEN
                  CREATE USER kasm WITH PASSWORD '\$KASM_PASSWORD';
                END IF;
                IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'vaultwarden') THEN
                  CREATE USER vaultwarden WITH PASSWORD '\$VAULTWARDEN_PASSWORD';
                END IF;
                IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'jenkins') THEN
                  CREATE USER jenkins WITH PASSWORD '\$JENKINS_PASSWORD';
                END IF;
                IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'authentik') THEN
                  CREATE USER authentik WITH PASSWORD '\$AUTHENTIK_PASSWORD';
                END IF;
              END\$\$;

              -- Grant database ownership
              ALTER DATABASE nextcloud OWNER TO nextcloud;
              ALTER DATABASE gitea OWNER TO gitea;
              ALTER DATABASE immich OWNER TO immich;
              ALTER DATABASE kasm OWNER TO kasm;
              ALTER DATABASE vaultwarden OWNER TO vaultwarden;
              ALTER DATABASE jenkins OWNER TO jenkins;
              ALTER DATABASE authentik OWNER TO authentik;

              EOF

              echo "Setting up Immich extensions..."
              psql -h shared-postgresql.database.svc.cluster.local -U postgres -d immich -v ON_ERROR_STOP=1 <<EOF
              CREATE EXTENSION IF NOT EXISTS cube;
              CREATE EXTENSION IF NOT EXISTS earthdistance;
              CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
              EOF

              echo "Database setup completed successfully!"
