---
# PostgreSQL Database PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-db-pvc
  namespace: personal
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 20Gi

---
# Immich Library PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-library-pvc
  namespace: personal
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 100Gi

---
# PostgreSQL Database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-postgres
  namespace: personal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-postgres
  template:
    metadata:
      labels:
        app: immich-postgres
    spec:
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: immich-db-pvc
      containers:
        - name: postgres
          image: tensorchord/pgvecto-rs:pg14-v0.2.0
          env:
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_DB
              value: "immich"
            - name: POSTGRES_INITDB_ARGS
              value: "--data-checksums"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              cpu: "2"
              memory: "2Gi"
            requests:
              cpu: "500m"
              memory: "512Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: immich-postgres
  namespace: personal
spec:
  selector:
    app: immich-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

---
# Redis Cache
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-redis
  namespace: personal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-redis
  template:
    metadata:
      labels:
        app: immich-redis
    spec:
      containers:
        - name: redis
          image: redis:6.2-alpine
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: immich-redis
  namespace: personal
spec:
  selector:
    app: immich-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---
# Immich Machine Learning
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: personal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-machine-learning
  template:
    metadata:
      labels:
        app: immich-machine-learning
    spec:
      volumes:
        - name: model-cache
          emptyDir: {}
      containers:
        - name: immich-machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:release
          env:
            - name: TRANSFORMERS_CACHE
              value: "/cache"
          volumeMounts:
            - name: model-cache
              mountPath: /cache
          resources:
            limits:
              cpu: "4"
              memory: "4Gi"
            requests:
              cpu: "1"
              memory: "1Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: immich-machine-learning
  namespace: personal
spec:
  selector:
    app: immich-machine-learning
  ports:
    - protocol: TCP
      port: 3003
      targetPort: 3003
  type: ClusterIP

---
# Immich Server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: personal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-server
  template:
    metadata:
      labels:
        app: immich-server
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: immich-library-pvc
        - name: photos
          persistentVolumeClaim:
            claimName: photos-nfs-pvc
      containers:
        - name: immich-server
          image: ghcr.io/immich-app/immich-server:release
          ports:
            - containerPort: 3001
              name: http
          env:
            - name: DB_HOSTNAME
              value: "immich-postgres"
            - name: DB_USERNAME
              value: "postgres"
            - name: DB_PASSWORD
              value: "postgres"
            - name: DB_DATABASE_NAME
              value: "immich"
            - name: REDIS_HOSTNAME
              value: "immich-redis"
            - name: IMMICH_MACHINE_LEARNING_URL
              value: "http://immich-machine-learning:3003"
            - name: TZ
              value: "America/New_York"
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
            - name: photos
              mountPath: /usr/src/app/external
          resources:
            limits:
              cpu: "4"
              memory: "4Gi"
            requests:
              cpu: "1"
              memory: "1Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: immich-server
  namespace: personal
spec:
  selector:
    app: immich-server
  ports:
    - protocol: TCP
      port: 3001
      targetPort: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: immich
  namespace: personal
spec:
  ingressClassName: tailscale
  tls:
    - hosts:
        - immich
  rules:
    - host: immich
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: immich-server
                port:
                  number: 3001
